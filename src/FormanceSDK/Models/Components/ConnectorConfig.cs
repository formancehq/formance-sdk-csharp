//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace FormanceSDK.Models.Components
{
    using FormanceSDK.Models.Components;
    using FormanceSDK.Utils;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    using System;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;
    

    public class ConnectorConfigType
    {
        private ConnectorConfigType(string value) { Value = value; }

        public string Value { get; private set; }
        public static ConnectorConfigType StripeConfig { get { return new ConnectorConfigType("StripeConfig"); } }
        
        public static ConnectorConfigType DummyPayConfig { get { return new ConnectorConfigType("DummyPayConfig"); } }
        
        public static ConnectorConfigType WiseConfig { get { return new ConnectorConfigType("WiseConfig"); } }
        
        public static ConnectorConfigType ModulrConfig { get { return new ConnectorConfigType("ModulrConfig"); } }
        
        public static ConnectorConfigType CurrencyCloudConfig { get { return new ConnectorConfigType("CurrencyCloudConfig"); } }
        
        public static ConnectorConfigType BankingCircleConfig { get { return new ConnectorConfigType("BankingCircleConfig"); } }
        
        public static ConnectorConfigType MangoPayConfig { get { return new ConnectorConfigType("MangoPayConfig"); } }
        
        public static ConnectorConfigType MoneycorpConfig { get { return new ConnectorConfigType("MoneycorpConfig"); } }
        
        public static ConnectorConfigType AtlarConfig { get { return new ConnectorConfigType("AtlarConfig"); } }
        
        public static ConnectorConfigType AdyenConfig { get { return new ConnectorConfigType("AdyenConfig"); } }
        
        public static ConnectorConfigType GenericConfig { get { return new ConnectorConfigType("GenericConfig"); } }
        
        public static ConnectorConfigType Null { get { return new ConnectorConfigType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(ConnectorConfigType v) { return v.Value; }
        public static ConnectorConfigType FromString(string v) {
            switch(v) {
                case "StripeConfig": return StripeConfig;
                case "DummyPayConfig": return DummyPayConfig;
                case "WiseConfig": return WiseConfig;
                case "ModulrConfig": return ModulrConfig;
                case "CurrencyCloudConfig": return CurrencyCloudConfig;
                case "BankingCircleConfig": return BankingCircleConfig;
                case "MangoPayConfig": return MangoPayConfig;
                case "MoneycorpConfig": return MoneycorpConfig;
                case "AtlarConfig": return AtlarConfig;
                case "AdyenConfig": return AdyenConfig;
                case "GenericConfig": return GenericConfig;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for ConnectorConfigType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((ConnectorConfigType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }


    [JsonConverter(typeof(ConnectorConfig.ConnectorConfigConverter))]
    public class ConnectorConfig {
        public ConnectorConfig(ConnectorConfigType type) {
            Type = type;
        }

        [SpeakeasyMetadata("form:explode=true")]
        public StripeConfig? StripeConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public DummyPayConfig? DummyPayConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public WiseConfig? WiseConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public ModulrConfig? ModulrConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public CurrencyCloudConfig? CurrencyCloudConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public BankingCircleConfig? BankingCircleConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public MangoPayConfig? MangoPayConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public MoneycorpConfig? MoneycorpConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public AtlarConfig? AtlarConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public AdyenConfig? AdyenConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public GenericConfig? GenericConfig { get; set; }

        public ConnectorConfigType Type { get; set; }


        public static ConnectorConfig CreateStripeConfig(StripeConfig stripeConfig) {
            ConnectorConfigType typ = ConnectorConfigType.StripeConfig;

            ConnectorConfig res = new ConnectorConfig(typ);
            res.StripeConfig = stripeConfig;
            return res;
        }

        public static ConnectorConfig CreateDummyPayConfig(DummyPayConfig dummyPayConfig) {
            ConnectorConfigType typ = ConnectorConfigType.DummyPayConfig;

            ConnectorConfig res = new ConnectorConfig(typ);
            res.DummyPayConfig = dummyPayConfig;
            return res;
        }

        public static ConnectorConfig CreateWiseConfig(WiseConfig wiseConfig) {
            ConnectorConfigType typ = ConnectorConfigType.WiseConfig;

            ConnectorConfig res = new ConnectorConfig(typ);
            res.WiseConfig = wiseConfig;
            return res;
        }

        public static ConnectorConfig CreateModulrConfig(ModulrConfig modulrConfig) {
            ConnectorConfigType typ = ConnectorConfigType.ModulrConfig;

            ConnectorConfig res = new ConnectorConfig(typ);
            res.ModulrConfig = modulrConfig;
            return res;
        }

        public static ConnectorConfig CreateCurrencyCloudConfig(CurrencyCloudConfig currencyCloudConfig) {
            ConnectorConfigType typ = ConnectorConfigType.CurrencyCloudConfig;

            ConnectorConfig res = new ConnectorConfig(typ);
            res.CurrencyCloudConfig = currencyCloudConfig;
            return res;
        }

        public static ConnectorConfig CreateBankingCircleConfig(BankingCircleConfig bankingCircleConfig) {
            ConnectorConfigType typ = ConnectorConfigType.BankingCircleConfig;

            ConnectorConfig res = new ConnectorConfig(typ);
            res.BankingCircleConfig = bankingCircleConfig;
            return res;
        }

        public static ConnectorConfig CreateMangoPayConfig(MangoPayConfig mangoPayConfig) {
            ConnectorConfigType typ = ConnectorConfigType.MangoPayConfig;

            ConnectorConfig res = new ConnectorConfig(typ);
            res.MangoPayConfig = mangoPayConfig;
            return res;
        }

        public static ConnectorConfig CreateMoneycorpConfig(MoneycorpConfig moneycorpConfig) {
            ConnectorConfigType typ = ConnectorConfigType.MoneycorpConfig;

            ConnectorConfig res = new ConnectorConfig(typ);
            res.MoneycorpConfig = moneycorpConfig;
            return res;
        }

        public static ConnectorConfig CreateAtlarConfig(AtlarConfig atlarConfig) {
            ConnectorConfigType typ = ConnectorConfigType.AtlarConfig;

            ConnectorConfig res = new ConnectorConfig(typ);
            res.AtlarConfig = atlarConfig;
            return res;
        }

        public static ConnectorConfig CreateAdyenConfig(AdyenConfig adyenConfig) {
            ConnectorConfigType typ = ConnectorConfigType.AdyenConfig;

            ConnectorConfig res = new ConnectorConfig(typ);
            res.AdyenConfig = adyenConfig;
            return res;
        }

        public static ConnectorConfig CreateGenericConfig(GenericConfig genericConfig) {
            ConnectorConfigType typ = ConnectorConfigType.GenericConfig;

            ConnectorConfig res = new ConnectorConfig(typ);
            res.GenericConfig = genericConfig;
            return res;
        }

        public static ConnectorConfig CreateNull() {
            ConnectorConfigType typ = ConnectorConfigType.Null;
            return new ConnectorConfig(typ);
        }

        public class ConnectorConfigConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(ConnectorConfig);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                var json = JRaw.Create(reader).ToString();
                if (json == "null")
                {
                    return null;
                }

                var fallbackCandidates = new List<(System.Type, object, string)>();

                try
                {
                    return new ConnectorConfig(ConnectorConfigType.WiseConfig)
                    {
                        WiseConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<WiseConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(WiseConfig), new ConnectorConfig(ConnectorConfigType.WiseConfig), "WiseConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new ConnectorConfig(ConnectorConfigType.StripeConfig)
                    {
                        StripeConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<StripeConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(StripeConfig), new ConnectorConfig(ConnectorConfigType.StripeConfig), "StripeConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new ConnectorConfig(ConnectorConfigType.GenericConfig)
                    {
                        GenericConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<GenericConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(GenericConfig), new ConnectorConfig(ConnectorConfigType.GenericConfig), "GenericConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new ConnectorConfig(ConnectorConfigType.ModulrConfig)
                    {
                        ModulrConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<ModulrConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(ModulrConfig), new ConnectorConfig(ConnectorConfigType.ModulrConfig), "ModulrConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new ConnectorConfig(ConnectorConfigType.CurrencyCloudConfig)
                    {
                        CurrencyCloudConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<CurrencyCloudConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(CurrencyCloudConfig), new ConnectorConfig(ConnectorConfigType.CurrencyCloudConfig), "CurrencyCloudConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new ConnectorConfig(ConnectorConfigType.MangoPayConfig)
                    {
                        MangoPayConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<MangoPayConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(MangoPayConfig), new ConnectorConfig(ConnectorConfigType.MangoPayConfig), "MangoPayConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new ConnectorConfig(ConnectorConfigType.MoneycorpConfig)
                    {
                        MoneycorpConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<MoneycorpConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(MoneycorpConfig), new ConnectorConfig(ConnectorConfigType.MoneycorpConfig), "MoneycorpConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new ConnectorConfig(ConnectorConfigType.AdyenConfig)
                    {
                        AdyenConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<AdyenConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(AdyenConfig), new ConnectorConfig(ConnectorConfigType.AdyenConfig), "AdyenConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new ConnectorConfig(ConnectorConfigType.DummyPayConfig)
                    {
                        DummyPayConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<DummyPayConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(DummyPayConfig), new ConnectorConfig(ConnectorConfigType.DummyPayConfig), "DummyPayConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new ConnectorConfig(ConnectorConfigType.AtlarConfig)
                    {
                        AtlarConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<AtlarConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(AtlarConfig), new ConnectorConfig(ConnectorConfigType.AtlarConfig), "AtlarConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new ConnectorConfig(ConnectorConfigType.BankingCircleConfig)
                    {
                        BankingCircleConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<BankingCircleConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(BankingCircleConfig), new ConnectorConfig(ConnectorConfigType.BankingCircleConfig), "BankingCircleConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (fallbackCandidates.Count > 0)
                {
                    fallbackCandidates.Sort((a, b) => ResponseBodyDeserializer.CompareFallbackCandidates(a.Item1, b.Item1, json));
                    foreach(var (deserializationType, returnObject, propertyName) in fallbackCandidates)
                    {
                        try
                        {
                            return ResponseBodyDeserializer.DeserializeUndiscriminatedUnionFallback(deserializationType, returnObject, propertyName, json);
                        }
                        catch (ResponseBodyDeserializer.DeserializationException)
                        {
                            // try next fallback option
                        }
                        catch (Exception)
                        {
                            throw;
                        }
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                ConnectorConfig res = (ConnectorConfig)value;
                if (ConnectorConfigType.FromString(res.Type).Equals(ConnectorConfigType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.StripeConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.StripeConfig));
                    return;
                }
                if (res.DummyPayConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.DummyPayConfig));
                    return;
                }
                if (res.WiseConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.WiseConfig));
                    return;
                }
                if (res.ModulrConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.ModulrConfig));
                    return;
                }
                if (res.CurrencyCloudConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.CurrencyCloudConfig));
                    return;
                }
                if (res.BankingCircleConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.BankingCircleConfig));
                    return;
                }
                if (res.MangoPayConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.MangoPayConfig));
                    return;
                }
                if (res.MoneycorpConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.MoneycorpConfig));
                    return;
                }
                if (res.AtlarConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.AtlarConfig));
                    return;
                }
                if (res.AdyenConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.AdyenConfig));
                    return;
                }
                if (res.GenericConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.GenericConfig));
                    return;
                }

            }

        }

    }
}