//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace FormanceSDK.Models.Components
{
    using FormanceSDK.Utils;
    using Newtonsoft.Json;
    using System;
    
    public enum V2PaymentScheme
    {
        [JsonProperty("visa")]
        Visa,
        [JsonProperty("mastercard")]
        Mastercard,
        [JsonProperty("amex")]
        Amex,
        [JsonProperty("diners")]
        Diners,
        [JsonProperty("discover")]
        Discover,
        [JsonProperty("jcb")]
        Jcb,
        [JsonProperty("unionpay")]
        Unionpay,
        [JsonProperty("sepa debit")]
        SepaDebit,
        [JsonProperty("sepa credit")]
        SepaCredit,
        [JsonProperty("sepa")]
        Sepa,
        [JsonProperty("apple pay")]
        ApplePay,
        [JsonProperty("google pay")]
        GooglePay,
        [JsonProperty("a2a")]
        A2a,
        [JsonProperty("ach debit")]
        AchDebit,
        [JsonProperty("ach")]
        Ach,
        [JsonProperty("rtp")]
        Rtp,
        [JsonProperty("unknown")]
        Unknown,
        [JsonProperty("other")]
        Other,
    }

    public static class V2PaymentSchemeExtension
    {
        public static string Value(this V2PaymentScheme value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static V2PaymentScheme ToEnum(this string value)
        {
            foreach(var field in typeof(V2PaymentScheme).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is V2PaymentScheme)
                    {
                        return (V2PaymentScheme)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum V2PaymentScheme");
        }
    }

}