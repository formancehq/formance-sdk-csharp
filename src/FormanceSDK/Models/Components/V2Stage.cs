//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace FormanceSDK.Models.Components
{
    using FormanceSDK.Models.Components;
    using FormanceSDK.Utils;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    using System;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;

    public class V2StageType
    {
        private V2StageType(string value) { Value = value; }

        public string Value { get; private set; }

        public static V2StageType V2StageSend { get { return new V2StageType("V2StageSend"); } }

        public static V2StageType V2StageDelay { get { return new V2StageType("V2StageDelay"); } }

        public static V2StageType V2StageWaitEvent { get { return new V2StageType("V2StageWaitEvent"); } }

        public static V2StageType V2Update { get { return new V2StageType("V2Update"); } }

        public static V2StageType Null { get { return new V2StageType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(V2StageType v) { return v.Value; }
        public static V2StageType FromString(string v) {
            switch(v) {
                case "V2StageSend": return V2StageSend;
                case "V2StageDelay": return V2StageDelay;
                case "V2StageWaitEvent": return V2StageWaitEvent;
                case "V2Update": return V2Update;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for V2StageType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((V2StageType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }


    [JsonConverter(typeof(V2Stage.V2StageConverter))]
    public class V2Stage
    {
        public V2Stage(V2StageType type)
        {
            Type = type;
        }

        [SpeakeasyMetadata("form:explode=true")]
        public V2StageSend? V2StageSend { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public V2StageDelay? V2StageDelay { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public V2StageWaitEvent? V2StageWaitEvent { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public V2Update? V2Update { get; set; }

        public V2StageType Type { get; set; }
        public static V2Stage CreateV2StageSend(V2StageSend v2StageSend)
        {
            V2StageType typ = V2StageType.V2StageSend;

            V2Stage res = new V2Stage(typ);
            res.V2StageSend = v2StageSend;
            return res;
        }
        public static V2Stage CreateV2StageDelay(V2StageDelay v2StageDelay)
        {
            V2StageType typ = V2StageType.V2StageDelay;

            V2Stage res = new V2Stage(typ);
            res.V2StageDelay = v2StageDelay;
            return res;
        }
        public static V2Stage CreateV2StageWaitEvent(V2StageWaitEvent v2StageWaitEvent)
        {
            V2StageType typ = V2StageType.V2StageWaitEvent;

            V2Stage res = new V2Stage(typ);
            res.V2StageWaitEvent = v2StageWaitEvent;
            return res;
        }
        public static V2Stage CreateV2Update(V2Update v2Update)
        {
            V2StageType typ = V2StageType.V2Update;

            V2Stage res = new V2Stage(typ);
            res.V2Update = v2Update;
            return res;
        }

        public static V2Stage CreateNull()
        {
            V2StageType typ = V2StageType.Null;
            return new V2Stage(typ);
        }

        public class V2StageConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(V2Stage);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                var json = JRaw.Create(reader).ToString();
                if (json == "null")
                {
                    return null;
                }

                var fallbackCandidates = new List<(System.Type, object, string)>();

                try
                {
                    return new V2Stage(V2StageType.V2StageWaitEvent)
                    {
                        V2StageWaitEvent = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<V2StageWaitEvent>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(V2StageWaitEvent), new V2Stage(V2StageType.V2StageWaitEvent), "V2StageWaitEvent"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new V2Stage(V2StageType.V2Update)
                    {
                        V2Update = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<V2Update>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(V2Update), new V2Stage(V2StageType.V2Update), "V2Update"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new V2Stage(V2StageType.V2StageDelay)
                    {
                        V2StageDelay = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<V2StageDelay>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(V2StageDelay), new V2Stage(V2StageType.V2StageDelay), "V2StageDelay"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new V2Stage(V2StageType.V2StageSend)
                    {
                        V2StageSend = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<V2StageSend>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(V2StageSend), new V2Stage(V2StageType.V2StageSend), "V2StageSend"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (fallbackCandidates.Count > 0)
                {
                    fallbackCandidates.Sort((a, b) => ResponseBodyDeserializer.CompareFallbackCandidates(a.Item1, b.Item1, json));
                    foreach(var (deserializationType, returnObject, propertyName) in fallbackCandidates)
                    {
                        try
                        {
                            return ResponseBodyDeserializer.DeserializeUndiscriminatedUnionFallback(deserializationType, returnObject, propertyName, json);
                        }
                        catch (ResponseBodyDeserializer.DeserializationException)
                        {
                            // try next fallback option
                        }
                        catch (Exception)
                        {
                            throw;
                        }
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }

                V2Stage res = (V2Stage)value;
                if (V2StageType.FromString(res.Type).Equals(V2StageType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }

                if (res.V2StageSend != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.V2StageSend));
                    return;
                }

                if (res.V2StageDelay != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.V2StageDelay));
                    return;
                }

                if (res.V2StageWaitEvent != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.V2StageWaitEvent));
                    return;
                }

                if (res.V2Update != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.V2Update));
                    return;
                }
            }

        }

    }
}