//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace FormanceSDK.Models.Components
{
    using FormanceSDK.Models.Components;
    using FormanceSDK.Utils;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    using System;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;
    

    public class V3ConnectorConfigType
    {
        private V3ConnectorConfigType(string value) { Value = value; }

        public string Value { get; private set; }
        public static V3ConnectorConfigType V3AdyenConfig { get { return new V3ConnectorConfigType("V3AdyenConfig"); } }
        
        public static V3ConnectorConfigType V3AtlarConfig { get { return new V3ConnectorConfigType("V3AtlarConfig"); } }
        
        public static V3ConnectorConfigType V3BankingcircleConfig { get { return new V3ConnectorConfigType("V3BankingcircleConfig"); } }
        
        public static V3ConnectorConfigType V3CurrencycloudConfig { get { return new V3ConnectorConfigType("V3CurrencycloudConfig"); } }
        
        public static V3ConnectorConfigType V3DummypayConfig { get { return new V3ConnectorConfigType("V3DummypayConfig"); } }
        
        public static V3ConnectorConfigType V3GenericConfig { get { return new V3ConnectorConfigType("V3GenericConfig"); } }
        
        public static V3ConnectorConfigType V3MangopayConfig { get { return new V3ConnectorConfigType("V3MangopayConfig"); } }
        
        public static V3ConnectorConfigType V3ModulrConfig { get { return new V3ConnectorConfigType("V3ModulrConfig"); } }
        
        public static V3ConnectorConfigType V3MoneycorpConfig { get { return new V3ConnectorConfigType("V3MoneycorpConfig"); } }
        
        public static V3ConnectorConfigType V3StripeConfig { get { return new V3ConnectorConfigType("V3StripeConfig"); } }
        
        public static V3ConnectorConfigType V3WiseConfig { get { return new V3ConnectorConfigType("V3WiseConfig"); } }
        
        public static V3ConnectorConfigType Null { get { return new V3ConnectorConfigType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(V3ConnectorConfigType v) { return v.Value; }
        public static V3ConnectorConfigType FromString(string v) {
            switch(v) {
                case "V3AdyenConfig": return V3AdyenConfig;
                case "V3AtlarConfig": return V3AtlarConfig;
                case "V3BankingcircleConfig": return V3BankingcircleConfig;
                case "V3CurrencycloudConfig": return V3CurrencycloudConfig;
                case "V3DummypayConfig": return V3DummypayConfig;
                case "V3GenericConfig": return V3GenericConfig;
                case "V3MangopayConfig": return V3MangopayConfig;
                case "V3ModulrConfig": return V3ModulrConfig;
                case "V3MoneycorpConfig": return V3MoneycorpConfig;
                case "V3StripeConfig": return V3StripeConfig;
                case "V3WiseConfig": return V3WiseConfig;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for V3ConnectorConfigType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((V3ConnectorConfigType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }


    [JsonConverter(typeof(V3ConnectorConfig.V3ConnectorConfigConverter))]
    public class V3ConnectorConfig {
        public V3ConnectorConfig(V3ConnectorConfigType type) {
            Type = type;
        }

        [SpeakeasyMetadata("form:explode=true")]
        public V3AdyenConfig? V3AdyenConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public V3AtlarConfig? V3AtlarConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public V3BankingcircleConfig? V3BankingcircleConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public V3CurrencycloudConfig? V3CurrencycloudConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public V3DummypayConfig? V3DummypayConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public V3GenericConfig? V3GenericConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public V3MangopayConfig? V3MangopayConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public V3ModulrConfig? V3ModulrConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public V3MoneycorpConfig? V3MoneycorpConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public V3StripeConfig? V3StripeConfig { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public V3WiseConfig? V3WiseConfig { get; set; }

        public V3ConnectorConfigType Type { get; set; }


        public static V3ConnectorConfig CreateV3AdyenConfig(V3AdyenConfig v3AdyenConfig) {
            V3ConnectorConfigType typ = V3ConnectorConfigType.V3AdyenConfig;

            V3ConnectorConfig res = new V3ConnectorConfig(typ);
            res.V3AdyenConfig = v3AdyenConfig;
            return res;
        }

        public static V3ConnectorConfig CreateV3AtlarConfig(V3AtlarConfig v3AtlarConfig) {
            V3ConnectorConfigType typ = V3ConnectorConfigType.V3AtlarConfig;

            V3ConnectorConfig res = new V3ConnectorConfig(typ);
            res.V3AtlarConfig = v3AtlarConfig;
            return res;
        }

        public static V3ConnectorConfig CreateV3BankingcircleConfig(V3BankingcircleConfig v3BankingcircleConfig) {
            V3ConnectorConfigType typ = V3ConnectorConfigType.V3BankingcircleConfig;

            V3ConnectorConfig res = new V3ConnectorConfig(typ);
            res.V3BankingcircleConfig = v3BankingcircleConfig;
            return res;
        }

        public static V3ConnectorConfig CreateV3CurrencycloudConfig(V3CurrencycloudConfig v3CurrencycloudConfig) {
            V3ConnectorConfigType typ = V3ConnectorConfigType.V3CurrencycloudConfig;

            V3ConnectorConfig res = new V3ConnectorConfig(typ);
            res.V3CurrencycloudConfig = v3CurrencycloudConfig;
            return res;
        }

        public static V3ConnectorConfig CreateV3DummypayConfig(V3DummypayConfig v3DummypayConfig) {
            V3ConnectorConfigType typ = V3ConnectorConfigType.V3DummypayConfig;

            V3ConnectorConfig res = new V3ConnectorConfig(typ);
            res.V3DummypayConfig = v3DummypayConfig;
            return res;
        }

        public static V3ConnectorConfig CreateV3GenericConfig(V3GenericConfig v3GenericConfig) {
            V3ConnectorConfigType typ = V3ConnectorConfigType.V3GenericConfig;

            V3ConnectorConfig res = new V3ConnectorConfig(typ);
            res.V3GenericConfig = v3GenericConfig;
            return res;
        }

        public static V3ConnectorConfig CreateV3MangopayConfig(V3MangopayConfig v3MangopayConfig) {
            V3ConnectorConfigType typ = V3ConnectorConfigType.V3MangopayConfig;

            V3ConnectorConfig res = new V3ConnectorConfig(typ);
            res.V3MangopayConfig = v3MangopayConfig;
            return res;
        }

        public static V3ConnectorConfig CreateV3ModulrConfig(V3ModulrConfig v3ModulrConfig) {
            V3ConnectorConfigType typ = V3ConnectorConfigType.V3ModulrConfig;

            V3ConnectorConfig res = new V3ConnectorConfig(typ);
            res.V3ModulrConfig = v3ModulrConfig;
            return res;
        }

        public static V3ConnectorConfig CreateV3MoneycorpConfig(V3MoneycorpConfig v3MoneycorpConfig) {
            V3ConnectorConfigType typ = V3ConnectorConfigType.V3MoneycorpConfig;

            V3ConnectorConfig res = new V3ConnectorConfig(typ);
            res.V3MoneycorpConfig = v3MoneycorpConfig;
            return res;
        }

        public static V3ConnectorConfig CreateV3StripeConfig(V3StripeConfig v3StripeConfig) {
            V3ConnectorConfigType typ = V3ConnectorConfigType.V3StripeConfig;

            V3ConnectorConfig res = new V3ConnectorConfig(typ);
            res.V3StripeConfig = v3StripeConfig;
            return res;
        }

        public static V3ConnectorConfig CreateV3WiseConfig(V3WiseConfig v3WiseConfig) {
            V3ConnectorConfigType typ = V3ConnectorConfigType.V3WiseConfig;

            V3ConnectorConfig res = new V3ConnectorConfig(typ);
            res.V3WiseConfig = v3WiseConfig;
            return res;
        }

        public static V3ConnectorConfig CreateNull() {
            V3ConnectorConfigType typ = V3ConnectorConfigType.Null;
            return new V3ConnectorConfig(typ);
        }

        public class V3ConnectorConfigConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(V3ConnectorConfig);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                var json = JRaw.Create(reader).ToString();
                if (json == "null")
                {
                    return null;
                }

                var fallbackCandidates = new List<(System.Type, object, string)>();

                try
                {
                    return new V3ConnectorConfig(V3ConnectorConfigType.V3DummypayConfig)
                    {
                        V3DummypayConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<V3DummypayConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(V3DummypayConfig), new V3ConnectorConfig(V3ConnectorConfigType.V3DummypayConfig), "V3DummypayConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new V3ConnectorConfig(V3ConnectorConfigType.V3StripeConfig)
                    {
                        V3StripeConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<V3StripeConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(V3StripeConfig), new V3ConnectorConfig(V3ConnectorConfigType.V3StripeConfig), "V3StripeConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new V3ConnectorConfig(V3ConnectorConfigType.V3GenericConfig)
                    {
                        V3GenericConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<V3GenericConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(V3GenericConfig), new V3ConnectorConfig(V3ConnectorConfigType.V3GenericConfig), "V3GenericConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new V3ConnectorConfig(V3ConnectorConfigType.V3WiseConfig)
                    {
                        V3WiseConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<V3WiseConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(V3WiseConfig), new V3ConnectorConfig(V3ConnectorConfigType.V3WiseConfig), "V3WiseConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new V3ConnectorConfig(V3ConnectorConfigType.V3AtlarConfig)
                    {
                        V3AtlarConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<V3AtlarConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(V3AtlarConfig), new V3ConnectorConfig(V3ConnectorConfigType.V3AtlarConfig), "V3AtlarConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new V3ConnectorConfig(V3ConnectorConfigType.V3CurrencycloudConfig)
                    {
                        V3CurrencycloudConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<V3CurrencycloudConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(V3CurrencycloudConfig), new V3ConnectorConfig(V3ConnectorConfigType.V3CurrencycloudConfig), "V3CurrencycloudConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new V3ConnectorConfig(V3ConnectorConfigType.V3MangopayConfig)
                    {
                        V3MangopayConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<V3MangopayConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(V3MangopayConfig), new V3ConnectorConfig(V3ConnectorConfigType.V3MangopayConfig), "V3MangopayConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new V3ConnectorConfig(V3ConnectorConfigType.V3ModulrConfig)
                    {
                        V3ModulrConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<V3ModulrConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(V3ModulrConfig), new V3ConnectorConfig(V3ConnectorConfigType.V3ModulrConfig), "V3ModulrConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new V3ConnectorConfig(V3ConnectorConfigType.V3MoneycorpConfig)
                    {
                        V3MoneycorpConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<V3MoneycorpConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(V3MoneycorpConfig), new V3ConnectorConfig(V3ConnectorConfigType.V3MoneycorpConfig), "V3MoneycorpConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new V3ConnectorConfig(V3ConnectorConfigType.V3AdyenConfig)
                    {
                        V3AdyenConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<V3AdyenConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(V3AdyenConfig), new V3ConnectorConfig(V3ConnectorConfigType.V3AdyenConfig), "V3AdyenConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new V3ConnectorConfig(V3ConnectorConfigType.V3BankingcircleConfig)
                    {
                        V3BankingcircleConfig = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<V3BankingcircleConfig>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(V3BankingcircleConfig), new V3ConnectorConfig(V3ConnectorConfigType.V3BankingcircleConfig), "V3BankingcircleConfig"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (fallbackCandidates.Count > 0)
                {
                    fallbackCandidates.Sort((a, b) => ResponseBodyDeserializer.CompareFallbackCandidates(a.Item1, b.Item1, json));
                    foreach(var (deserializationType, returnObject, propertyName) in fallbackCandidates)
                    {
                        try
                        {
                            return ResponseBodyDeserializer.DeserializeUndiscriminatedUnionFallback(deserializationType, returnObject, propertyName, json);
                        }
                        catch (ResponseBodyDeserializer.DeserializationException)
                        {
                            // try next fallback option
                        }
                        catch (Exception)
                        {
                            throw;
                        }
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                V3ConnectorConfig res = (V3ConnectorConfig)value;
                if (V3ConnectorConfigType.FromString(res.Type).Equals(V3ConnectorConfigType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.V3AdyenConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.V3AdyenConfig));
                    return;
                }
                if (res.V3AtlarConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.V3AtlarConfig));
                    return;
                }
                if (res.V3BankingcircleConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.V3BankingcircleConfig));
                    return;
                }
                if (res.V3CurrencycloudConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.V3CurrencycloudConfig));
                    return;
                }
                if (res.V3DummypayConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.V3DummypayConfig));
                    return;
                }
                if (res.V3GenericConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.V3GenericConfig));
                    return;
                }
                if (res.V3MangopayConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.V3MangopayConfig));
                    return;
                }
                if (res.V3ModulrConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.V3ModulrConfig));
                    return;
                }
                if (res.V3MoneycorpConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.V3MoneycorpConfig));
                    return;
                }
                if (res.V3StripeConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.V3StripeConfig));
                    return;
                }
                if (res.V3WiseConfig != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.V3WiseConfig));
                    return;
                }

            }

        }

    }
}