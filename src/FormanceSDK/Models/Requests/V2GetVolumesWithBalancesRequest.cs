//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace FormanceSDK.Models.Requests
{
    using FormanceSDK.Utils;
    using System;
    using System.Collections.Generic;
    
    public class V2GetVolumesWithBalancesRequest
    {

        /// <summary>
        /// The maximum number of results to return per page.<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageSize")]
        public long? PageSize { get; set; }

        /// <summary>
        /// Parameter used in pagination requests. Maximum page size is set to 15.<br/>
        /// 
        /// <remarks>
        /// Set to the value of next for the next page of results.<br/>
        /// Set to the value of previous for the previous page of results.<br/>
        /// No other parameters can be set when this parameter is set.<br/>
        /// 
        /// </remarks>
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=cursor")]
        public string? Cursor { get; set; }

        /// <summary>
        /// Name of the ledger.
        /// </summary>
        [SpeakeasyMetadata("pathParam:style=simple,explode=false,name=ledger")]
        public string Ledger { get; set; } = default!;

        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=endTime")]
        public DateTime? EndTime { get; set; }

        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=startTime")]
        public DateTime? StartTime { get; set; }

        /// <summary>
        /// Use insertion date instead of effective date
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=insertionDate")]
        public bool? InsertionDate { get; set; }

        /// <summary>
        /// Group volumes and balance by the level of the segment of the address
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=groupBy")]
        public long? GroupBy { get; set; }

        [SpeakeasyMetadata("request:mediaType=application/json")]
        public Dictionary<string, object>? RequestBody { get; set; }
    }
}