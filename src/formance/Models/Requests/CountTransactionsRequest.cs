//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace formance.Models.Requests
{
    using System;
    using formance.Models.Requests;
    using formance.Utils;
    
    public class CountTransactionsRequest
    {

        /// <summary>
        /// Name of the ledger.
        /// </summary>
        [SpeakeasyMetadata("pathParam:style=simple,explode=false,name=ledger")]
        public string Ledger { get; set; } = default!;

        /// <summary>
        /// Filter transactions by reference field.
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=reference")]
        public string? Reference { get; set; }

        /// <summary>
        /// Filter transactions with postings involving given account, either as source or destination (regular expression placed between ^ and $).
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=account")]
        public string? Account { get; set; }

        /// <summary>
        /// Filter transactions with postings involving given account at source (regular expression placed between ^ and $).
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=source")]
        public string? Source { get; set; }

        /// <summary>
        /// Filter transactions with postings involving given account at destination (regular expression placed between ^ and $).
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=destination")]
        public string? Destination { get; set; }

        /// <summary>
        /// Filter transactions that occurred after this timestamp.<br/>
        /// 
        /// <remarks>
        /// The format is RFC3339 and is inclusive (for example, &quot;2023-01-02T15:04:01Z&quot; includes the first second of 4th minute).<br/>
        /// 
        /// </remarks>
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=startTime")]
        public DateTime? StartTime { get; set; }

        /// <summary>
        /// Filter transactions that occurred before this timestamp.<br/>
        /// 
        /// <remarks>
        /// The format is RFC3339 and is exclusive (for example, &quot;2023-01-02T15:04:01Z&quot; excludes the first second of 4th minute).<br/>
        /// 
        /// </remarks>
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=endTime")]
        public DateTime? EndTime { get; set; }

        /// <summary>
        /// Filter transactions by metadata key value pairs. Nested objects can be used as seen in the example below.
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=deepObject,explode=true,name=metadata")]
        public Models.Requests.Metadata? Metadata { get; set; }
    }
}